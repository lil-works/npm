<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Breakdown extends \AppBundle\Entity\Breakdown implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'creator', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'start', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'stop', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'notFinished', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'closed', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'descriptors', 'breakdowns_interferos'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'creator', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'start', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'stop', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'notFinished', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'closed', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Breakdown' . "\0" . 'descriptors', 'breakdowns_interferos'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Breakdown $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function addDescriptor(\AppBundle\Entity\Descriptor $descriptor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDescriptor', [$descriptor]);

        return parent::addDescriptor($descriptor);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDescriptor(\AppBundle\Entity\Descriptor $descriptor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDescriptor', [$descriptor]);

        return parent::removeDescriptor($descriptor);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptors', []);

        return parent::getDescriptors();
    }

    /**
     * {@inheritDoc}
     */
    public function addBreakdownsInterfero(\AppBundle\Entity\BreakdownsInterferos $breakdownsInterfero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBreakdownsInterfero', [$breakdownsInterfero]);

        return parent::addBreakdownsInterfero($breakdownsInterfero);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBreakdownsInterfero(\AppBundle\Entity\BreakdownsInterferos $breakdownsInterfero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBreakdownsInterfero', [$breakdownsInterfero]);

        return parent::removeBreakdownsInterfero($breakdownsInterfero);
    }

    /**
     * {@inheritDoc}
     */
    public function getBreakdownsInterferos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBreakdownsInterferos', []);

        return parent::getBreakdownsInterferos();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setStart($start)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStart', [$start]);

        return parent::setStart($start);
    }

    /**
     * {@inheritDoc}
     */
    public function getStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStart', []);

        return parent::getStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setStop($stop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStop', [$stop]);

        return parent::setStop($stop);
    }

    /**
     * {@inheritDoc}
     */
    public function getStop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStop', []);

        return parent::getStop();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotFinished($notFinished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotFinished', [$notFinished]);

        return parent::setNotFinished($notFinished);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotFinished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotFinished', []);

        return parent::getNotFinished();
    }

    /**
     * {@inheritDoc}
     */
    public function setClosed($closed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClosed', [$closed]);

        return parent::setClosed($closed);
    }

    /**
     * {@inheritDoc}
     */
    public function getClosed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClosed', []);

        return parent::getClosed();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator(\AppBundle\Entity\User $creator = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', [$creator]);

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', []);

        return parent::getCreator();
    }

}
