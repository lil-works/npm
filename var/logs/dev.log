[2016-11-13 01:21:49] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'boring_machine' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'boring_machine' */ WHERE k.table_name = 'boring_machine' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'boring_machine' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'breakdown' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'breakdown' */ WHERE k.table_name = 'breakdown' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'breakdown' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'breakdowns_descriptors' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'breakdowns_descriptors' */ WHERE k.table_name = 'breakdowns_descriptors' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'breakdowns_descriptors' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'breakdowns_interferos' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'breakdowns_interferos' */ WHERE k.table_name = 'breakdowns_interferos' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'breakdowns_interferos' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'descriptor' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'descriptor' */ WHERE k.table_name = 'descriptor' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'descriptor' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'descriptor_category' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'descriptor_category' */ WHERE k.table_name = 'descriptor_category' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'descriptor_category' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'fos_user' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'fos_user' */ WHERE k.table_name = 'fos_user' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'fos_user' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'interfero' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'interfero' */ WHERE k.table_name = 'interfero' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'interfero' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'npm' AND TABLE_NAME = 'synonym' [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'synonym' */ WHERE k.table_name = 'synonym' AND k.table_schema = 'npm' /*!50116 AND c.constraint_schema = 'npm' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2016-11-13 01:21:49] doctrine.DEBUG: SELECT TABLE_NAME AS `Table`, NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, SEQ_IN_INDEX AS Seq_in_index, COLUMN_NAME AS Column_Name, COLLATION AS Collation, CARDINALITY AS Cardinality, SUB_PART AS Sub_Part, PACKED AS Packed, NULLABLE AS `Null`, INDEX_TYPE AS Index_Type, COMMENT AS Comment FROM information_schema.STATISTICS WHERE TABLE_NAME = 'synonym' AND TABLE_SCHEMA = 'npm' [] []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/framework): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/app): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/fosjsrouting): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/jmstranslation): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/manager): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/operator): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/analyzer): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:21:49] php.DEBUG: unlink(web/bundles/site): No such file or directory {"type":2,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Filesystem/Filesystem.php","line":178,"level":28928} []
[2016-11-13 01:22:00] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar"} []
[2016-11-13 01:22:01] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:22:01] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:22:02] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:22:03] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:22:03] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:22:03] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:22:03] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:22:04] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"fcf1d7","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/fcf1d7"} []
[2016-11-13 01:22:04] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:22:14] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5BdurationUnity%5D=day&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=0&descriptorTree_filter%5BminDuration%5D=86400&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=day"} []
[2016-11-13 01:22:14] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:22:15] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:22:15] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[]} []
[2016-11-13 01:22:15] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[]} []
[2016-11-13 01:22:15] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[]} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:22:16] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:22:16] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:22:17] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:22:17] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:22:17] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"7e8be7","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/7e8be7"} []
[2016-11-13 01:22:18] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:24:06] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5Bcategory%5D%5B%5D=4&descriptorTree_filter%5BdurationUnity%5D=day&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=0&descriptorTree_filter%5BminDuration%5D=86400&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=day"} []
[2016-11-13 01:24:06] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:24:06] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:24:07] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[4]} []
[2016-11-13 01:24:07] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[4]} []
[2016-11-13 01:24:07] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[4]} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:24:08] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:24:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:24:09] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:24:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:24:10] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"a3c325","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/a3c325"} []
[2016-11-13 01:24:10] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:25:44] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5Bcategory%5D%5B%5D=4&descriptorTree_filter%5BdurationUnity%5D=day&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=0&descriptorTree_filter%5BminDuration%5D=86400&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=day"} []
[2016-11-13 01:25:44] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:25:45] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:25:45] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[4]} []
[2016-11-13 01:25:45] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[4]} []
[2016-11-13 01:25:45] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":86400,"maxDuration":null,"category":[4]} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:25:46] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:25:47] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:25:47] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:25:47] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:25:47] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:25:48] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"11969a","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/11969a"} []
[2016-11-13 01:25:49] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:05] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5Bcategory%5D%5B%5D=1&descriptorTree_filter%5Bcategory%5D%5B%5D=2&descriptorTree_filter%5Bcategory%5D%5B%5D=3&descriptorTree_filter%5Bcategory%5D%5B%5D=4&descriptorTree_filter%5BdurationUnity%5D=day&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=0&descriptorTree_filter%5BminDuration%5D=86400&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=day"} []
[2016-11-13 01:26:05] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:06] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:26:06] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[1,2,3,4]} []
[2016-11-13 01:26:06] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":86400,"maxDuration":0,"category":[1,2,3,4]} []
[2016-11-13 01:26:06] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":86400,"maxDuration":null,"category":[1,2,3,4]} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:26:07] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:26:08] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:26:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:08] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:26:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:09] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"ef2299","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/ef2299"} []
[2016-11-13 01:26:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:23] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5Bcategory%5D%5B%5D=1&descriptorTree_filter%5Bcategory%5D%5B%5D=2&descriptorTree_filter%5Bcategory%5D%5B%5D=3&descriptorTree_filter%5Bcategory%5D%5B%5D=4&descriptorTree_filter%5BdurationUnity%5D=hour&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=3600&descriptorTree_filter%5BminDuration%5D=0&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=hour"} []
[2016-11-13 01:26:23] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:23] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:26:24] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":0,"maxDuration":3600,"category":[1,2,3,4]} []
[2016-11-13 01:26:24] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":0,"maxDuration":3600,"category":[1,2,3,4]} []
[2016-11-13 01:26:24] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":0,"maxDuration":3600,"category":[1,2,3,4]} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:26:25] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:26:26] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:26] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:26:26] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:27] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"6fb0d0","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/6fb0d0"} []
[2016-11-13 01:26:27] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:45] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5Bcategory%5D%5B%5D=1&descriptorTree_filter%5Bcategory%5D%5B%5D=2&descriptorTree_filter%5Bcategory%5D%5B%5D=3&descriptorTree_filter%5Bcategory%5D%5B%5D=4&descriptorTree_filter%5BdurationUnity%5D=hour&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=0&descriptorTree_filter%5BminDuration%5D=3600&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=hour"} []
[2016-11-13 01:26:46] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:46] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:26:46] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":3600,"maxDuration":0,"category":[1,2,3,4]} []
[2016-11-13 01:26:46] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":3600,"maxDuration":0,"category":[1,2,3,4]} []
[2016-11-13 01:26:46] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":3600,"maxDuration":null,"category":[1,2,3,4]} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:26:47] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:26:48] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:26:48] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:48] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:26:48] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:26:49] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"07bf43","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/07bf43"} []
[2016-11-13 01:26:49] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:11] request.INFO: Matched route "operator_ajax_breakdown_show". {"route_parameters":{"_controller":"OperatorBundle\\Controller\\AjaxController::breakdownShowAction","id":"3","_route":"operator_ajax_breakdown_show"},"request_uri":"http://noema-pareto-manager/app_dev.php/operator/ajax/breakdown/show/3"} []
[2016-11-13 01:27:11] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:11] doctrine.DEBUG: SELECT t0.id AS id_1, t0.createdAt AS createdAt_2, t0.start AS start_3, t0.stop AS stop_4, t0.closed AS closed_5, t0.description AS description_6, t0.createdBy AS createdBy_7 FROM breakdown t0 WHERE t0.id = ? ["3"] []
[2016-11-13 01:27:11] doctrine.DEBUG: SELECT t0.id AS id_1, t0.createdAt AS createdAt_2, t0.breakdownBefore AS breakdownBefore_3, t0.breakdownAfter AS breakdownAfter_4, t0.createdBy AS createdBy_5, t0.breakdown AS breakdown_6 FROM boring_machine t0 WHERE t0.breakdown = ? [3] []
[2016-11-13 01:27:11] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.tag AS tag_3, t0.category AS category_4 FROM descriptor t0 INNER JOIN breakdowns_descriptors ON t0.id = breakdowns_descriptors.descriptor_id WHERE breakdowns_descriptors.breakdown_id = ? [3] []
[2016-11-13 01:27:11] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.pos AS pos_3, t0.color AS color_4 FROM descriptor_category t0 WHERE t0.id = ? [2] []
[2016-11-13 01:27:13] request.INFO: Matched route "operator_ajax_breakdown_show". {"route_parameters":{"_controller":"OperatorBundle\\Controller\\AjaxController::breakdownShowAction","id":"5","_route":"operator_ajax_breakdown_show"},"request_uri":"http://noema-pareto-manager/app_dev.php/operator/ajax/breakdown/show/5"} []
[2016-11-13 01:27:13] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:13] doctrine.DEBUG: SELECT t0.id AS id_1, t0.createdAt AS createdAt_2, t0.start AS start_3, t0.stop AS stop_4, t0.closed AS closed_5, t0.description AS description_6, t0.createdBy AS createdBy_7 FROM breakdown t0 WHERE t0.id = ? ["5"] []
[2016-11-13 01:27:13] doctrine.DEBUG: SELECT t0.id AS id_1, t0.createdAt AS createdAt_2, t0.breakdownBefore AS breakdownBefore_3, t0.breakdownAfter AS breakdownAfter_4, t0.createdBy AS createdBy_5, t0.breakdown AS breakdown_6 FROM boring_machine t0 WHERE t0.breakdown = ? [5] []
[2016-11-13 01:27:13] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.tag AS tag_3, t0.category AS category_4 FROM descriptor t0 INNER JOIN breakdowns_descriptors ON t0.id = breakdowns_descriptors.descriptor_id WHERE breakdowns_descriptors.breakdown_id = ? [5] []
[2016-11-13 01:27:13] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.pos AS pos_3, t0.color AS color_4 FROM descriptor_category t0 WHERE t0.id = ? [1] []
[2016-11-13 01:27:13] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.pos AS pos_3, t0.color AS color_4 FROM descriptor_category t0 WHERE t0.id = ? [2] []
[2016-11-13 01:27:13] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.pos AS pos_3, t0.color AS color_4 FROM descriptor_category t0 WHERE t0.id = ? [3] []
[2016-11-13 01:27:21] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5Bcategory%5D%5B%5D=1&descriptorTree_filter%5Bcategory%5D%5B%5D=2&descriptorTree_filter%5Bcategory%5D%5B%5D=3&descriptorTree_filter%5Bcategory%5D%5B%5D=4&descriptorTree_filter%5BdurationUnity%5D=hour&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=35996400&descriptorTree_filter%5BminDuration%5D=3600&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=hour"} []
[2016-11-13 01:27:21] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:22] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:27:22] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":3600,"maxDuration":35996400,"category":[1,2,3,4]} []
[2016-11-13 01:27:22] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":3600,"maxDuration":35996400,"category":[1,2,3,4]} []
[2016-11-13 01:27:22] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":3600,"maxDuration":35996400,"category":[1,2,3,4]} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:27:23] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:27:23] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:24] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:27:24] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:25] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"b9135a","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/b9135a"} []
[2016-11-13 01:27:25] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:49] request.INFO: Matched route "analyzer_descriptorBar". {"route_parameters":{"_controller":"AnalyzerBundle\\Controller\\DefaultController::descriptorBarAction","category":0,"_route":"analyzer_descriptorBar"},"request_uri":"http://noema-pareto-manager/app_dev.php/analyzer/descriptor-bar?descriptorTree_filter%5Bcategory%5D%5B%5D=1&descriptorTree_filter%5Bcategory%5D%5B%5D=2&descriptorTree_filter%5Bcategory%5D%5B%5D=3&descriptorTree_filter%5Bcategory%5D%5B%5D=4&descriptorTree_filter%5BdurationUnity%5D=hour&descriptorTree_filter%5BinterferoPonderation%5D=on&descriptorTree_filter%5BmaxDuration%5D=0&descriptorTree_filter%5BminDuration%5D=3600&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstart%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstart%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bday%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Bmonth%5D=&descriptorTree_filter%5Bstop%5D%5Bdate%5D%5Byear%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bhour%5D=&descriptorTree_filter%5Bstop%5D%5Btime%5D%5Bminute%5D=&descriptorTree_filter%5BtimePonderation%5D=on&duration-unity=hour"} []
[2016-11-13 01:27:49] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:49] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.label AS label_1, d0_.pos AS pos_2, d0_.color AS color_3 FROM descriptor_category d0_ [] []
[2016-11-13 01:27:49] doctrine.DEBUG: SELECT DISTINCT     LEAST(id1, id2) AS fromField,     GREATEST(id2, id1) AS toField,     (SELECT             COUNT(b.id)         FROM             breakdown b         WHERE             b.closed = 1                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     b.id = bd.breakdown_id                         AND bd.descriptor_id = id1)                 AND EXISTS( SELECT                     1                 FROM                     breakdowns_descriptors bd                 WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                         IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                             IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                         AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                         (b.start BETWEEN :start AND :stop)                             OR (b.stop BETWEEN :start AND :stop),                         IF(:start IS NULL AND :stop IS NOT NULL,                             (b.start <= :stop) OR (b.stop <= :stop),                             IF(:start IS NOT NULL AND :stop IS NULL,                                 (b.start >= :start)                                     OR (b.stop >= :start),                                 (b.start >= 0))))                         AND b.id = bd.breakdown_id                         AND b.closed = 1                         AND bd.descriptor_id = id2)) AS valueField FROM     (SELECT         d1.id AS id1, d2.id AS id2     FROM         descriptor d1     LEFT JOIN descriptor d2 ON d1.id != d2.id AND d2.category IN (:category)     WHERE         d1.category IN (:category)) s1 HAVING valueField > 0 ORDER BY id1; {"start":null,"stop":null,"minDuration":3600,"maxDuration":0,"category":[1,2,3,4]} []
[2016-11-13 01:27:49] doctrine.DEBUG:               SELECT                 d.id AS idField,                 d.label AS labelField,                 d.category AS categoryField,                 COUNT(b.id) AS valueField,                 group_concat(b.id) AS breakdownsField,                 b.start as start,                 b.stop as stop,                 sec_to_time(SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))) as cumulativeDuration,                 round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT             SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))         FROM             breakdown b         WHERE             IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                 IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                     IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                 AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                 (b.start BETWEEN :start AND :stop)                     OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL,                     (b.start <= :stop) OR (b.stop <= :stop),                     IF(:start IS NOT NULL AND :stop IS NULL,                         (b.start >= :start)                             OR (b.stop >= :start),                         (b.start >= 0))))                 AND d.category IN (:category)                 AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON b.id = bd.breakdown_id             WHERE              IF( :minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))             AND              IF(:start IS NOT NULL AND :stop IS NOT NULL,(b.start BETWEEN :start AND :stop) OR (b.stop BETWEEN :start AND :stop),                 IF(:start IS NULL AND :stop IS NOT NULL, (b.stop <= :stop) ,                     IF(:start IS NOT NULL AND :stop IS NULL,(b.start >= :start),                         (b.start >= 0)                     )                 )             )             AND d.category IN (:category)             AND b.closed = 1             GROUP BY d.id              {"start":null,"stop":null,"minDuration":3600,"maxDuration":0,"category":[1,2,3,4]} []
[2016-11-13 01:27:49] doctrine.DEBUG:              SELECT                  d.id AS id,                 d.category AS category_id,                 d.label AS label,                 GROUP_CONCAT(bd.breakdown_id) AS breakdownsList,                 COUNT(bd.breakdown_id) as breakdownCount,                  round(100 * COUNT(bd.breakdown_id) / (SELECT count(b.id) FROM breakdown b                     WHERE                     IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1                  ),2) AS breakdownOccuranceRatio,                 round(100*COUNT(bd.breakdown_id) / (SELECT                          COUNT(id)                     FROM                         breakdown                     WHERE                         closed = 1),2) AS percent_occurance,                         round(100*SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start)))) /  (SELECT                          SUM((TIME_TO_SEC(TIMEDIFF(b.stop, b.start))))                     FROM                         breakdown b                     WHERE                         IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                             IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                                 (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                                 IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                             AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                             (b.start BETWEEN :start AND :stop)                                 OR (b.stop BETWEEN :start AND :stop),                             IF(:start IS NULL AND :stop IS NOT NULL,                                 (b.start <= :stop) OR (b.stop <= :stop),                                 IF(:start IS NOT NULL AND :stop IS NULL,                                     (b.start >= :start)                                         OR (b.stop >= :start),                                     (b.start >= 0))))                             AND d.category IN (:category)                             AND b.closed = 1),2) as breakdownLengthRatio             FROM                 descriptor d                     LEFT JOIN                 breakdowns_descriptors bd ON bd.descriptor_id = d.id                     LEFT JOIN                 breakdown b ON bd.breakdown_id = b.id             WHERE                 IF(:minDuration IS NOT NULL AND :maxDuration IS NOT NULL,                     (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) BETWEEN :minDuration AND :maxDuration),                     IF(:minDuration IS NULL AND :maxDuration IS NOT NULL,                         (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) <= :maxDuration),                         IF(:minDuration IS NOT NULL AND :maxDuration IS NULL,                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= :minDuration),                             (TIME_TO_SEC(TIMEDIFF(b.stop, b.start)) >= 0))))                     AND IF(:start IS NOT NULL AND :stop IS NOT NULL,                     (b.start BETWEEN :start AND :stop)                         OR (b.stop BETWEEN :start AND :stop),                     IF(:start IS NULL AND :stop IS NOT NULL,                         (b.start <= :stop) OR (b.stop <= :stop),                         IF(:start IS NOT NULL AND :stop IS NULL,                             (b.start >= :start)                                 OR (b.stop >= :start),                             (b.start >= 0))))                     AND d.category IN (:category)                     AND b.closed = 1             GROUP BY bd.descriptor_id             ORDER BY breakdownCount DESC          {"start":null,"stop":null,"minDuration":3600,"maxDuration":null,"category":[1,2,3,4]} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Category","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Time ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Interfero ponderation","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"on","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"off","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Start","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Stop","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Duration unity","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"second","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"minute","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"hour","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"day","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"week","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Min duration","domain":"messages","locale":"en"} []
[2016-11-13 01:27:50] translation.WARNING: Translation not found. {"id":"Max duration","domain":"messages","locale":"en"} []
[2016-11-13 01:27:51] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:27:51] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:51] request.INFO: Matched route "fos_js_routing_js". {"route_parameters":{"_controller":"fos_js_routing.controller:indexAction","_format":"js","_route":"fos_js_routing_js"},"request_uri":"http://noema-pareto-manager/app_dev.php/js/routing?callback=fos.Router.setData"} []
[2016-11-13 01:27:51] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:52] request.INFO: Matched route "_wdt". {"route_parameters":{"_controller":"web_profiler.controller.profiler:toolbarAction","token":"34506b","_route":"_wdt"},"request_uri":"http://noema-pareto-manager/app_dev.php/_wdt/34506b"} []
[2016-11-13 01:27:52] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:56] request.INFO: Matched route "operator_ajax_breakdown_show". {"route_parameters":{"_controller":"OperatorBundle\\Controller\\AjaxController::breakdownShowAction","id":"9","_route":"operator_ajax_breakdown_show"},"request_uri":"http://noema-pareto-manager/app_dev.php/operator/ajax/breakdown/show/9"} []
[2016-11-13 01:27:56] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:27:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.createdAt AS createdAt_2, t0.start AS start_3, t0.stop AS stop_4, t0.closed AS closed_5, t0.description AS description_6, t0.createdBy AS createdBy_7 FROM breakdown t0 WHERE t0.id = ? ["9"] []
[2016-11-13 01:27:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.createdAt AS createdAt_2, t0.breakdownBefore AS breakdownBefore_3, t0.breakdownAfter AS breakdownAfter_4, t0.createdBy AS createdBy_5, t0.breakdown AS breakdown_6 FROM boring_machine t0 WHERE t0.breakdown = ? [9] []
[2016-11-13 01:27:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.tag AS tag_3, t0.category AS category_4 FROM descriptor t0 INNER JOIN breakdowns_descriptors ON t0.id = breakdowns_descriptors.descriptor_id WHERE breakdowns_descriptors.breakdown_id = ? [9] []
[2016-11-13 01:27:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.pos AS pos_3, t0.color AS color_4 FROM descriptor_category t0 WHERE t0.id = ? [4] []
[2016-11-13 01:27:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.pos AS pos_3, t0.color AS color_4 FROM descriptor_category t0 WHERE t0.id = ? [2] []
[2016-11-13 01:27:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.label AS label_2, t0.pos AS pos_3, t0.color AS color_4 FROM descriptor_category t0 WHERE t0.id = ? [1] []
[2016-11-13 01:28:02] request.INFO: Matched route "_profiler". {"route_parameters":{"_controller":"web_profiler.controller.profiler:panelAction","token":"34506b","_route":"_profiler"},"request_uri":"http://noema-pareto-manager/app_dev.php/_profiler/34506b?panel=db"} []
[2016-11-13 01:28:02] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2016-11-13 01:28:05] request.INFO: Matched route "_profiler_search_bar". {"route_parameters":{"_controller":"web_profiler.controller.profiler:searchBarAction","_route":"_profiler_search_bar"},"request_uri":"http://noema-pareto-manager/app_dev.php/_profiler/search_bar?panel=db"} []
[2016-11-13 01:39:56] php.INFO: Twig Test "sameas" is deprecated since version 1.21. Use "same as" instead in JMSTranslationBundle:Translate:index.html.twig at line 7. {"type":16384,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Extension/Core.php","line":289,"level":28928,"stack":[{"function":"handleError","class":"Symfony\\Component\\Debug\\ErrorHandler","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Extension/Core.php","line":289,"function":"trigger_error"},{"function":"parseTestExpression","class":"Twig_Extension_Core","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/ExpressionParser.php","line":48,"function":"call_user_func"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":144,"function":"parseExpression","class":"Twig_ExpressionParser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/TokenParser/Block.php","line":38,"function":"subparse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":187,"function":"parse","class":"Twig_TokenParser_Block","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":100,"function":"subparse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":619,"function":"parse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":671,"function":"parse","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":396,"function":"compileSource","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/CacheWarmer/TemplateCacheCacheWarmer.php","line":78,"function":"loadTemplate","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerAggregate.php","line":48,"function":"warmUp","class":"Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheCacheWarmer","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php","line":144,"function":"warmUp","class":"Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php","line":96,"function":"warmup","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php","line":256,"function":"execute","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":810,"function":"run","class":"Symfony\\Component\\Console\\Command\\Command","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":186,"function":"doRunCommand","class":"Symfony\\Component\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Console/Application.php","line":80,"function":"doRun","class":"Symfony\\Component\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":117,"function":"doRun","class":"Symfony\\Bundle\\FrameworkBundle\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/bin/console","line":29,"function":"run","class":"Symfony\\Component\\Console\\Application","type":"->"}]} []
[2016-11-13 01:39:56] php.INFO: Twig Test "sameas" is deprecated since version 1.21. Use "same as" instead in JMSTranslationBundle:Translate:index.html.twig at line 36. {"type":16384,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Extension/Core.php","line":289,"level":28928,"stack":[{"function":"handleError","class":"Symfony\\Component\\Debug\\ErrorHandler","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Extension/Core.php","line":289,"function":"trigger_error"},{"function":"parseTestExpression","class":"Twig_Extension_Core","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/ExpressionParser.php","line":48,"function":"call_user_func"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/TokenParser/If.php","line":31,"function":"parseExpression","class":"Twig_ExpressionParser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":187,"function":"parse","class":"Twig_TokenParser_If","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/TokenParser/Block.php","line":38,"function":"subparse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":187,"function":"parse","class":"Twig_TokenParser_Block","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":100,"function":"subparse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":619,"function":"parse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":671,"function":"parse","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":396,"function":"compileSource","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/CacheWarmer/TemplateCacheCacheWarmer.php","line":78,"function":"loadTemplate","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerAggregate.php","line":48,"function":"warmUp","class":"Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheCacheWarmer","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php","line":144,"function":"warmUp","class":"Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php","line":96,"function":"warmup","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php","line":256,"function":"execute","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":810,"function":"run","class":"Symfony\\Component\\Console\\Command\\Command","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":186,"function":"doRunCommand","class":"Symfony\\Component\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Console/Application.php","line":80,"function":"doRun","class":"Symfony\\Component\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":117,"function":"doRun","class":"Symfony\\Bundle\\FrameworkBundle\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/bin/console","line":29,"function":"run","class":"Symfony\\Component\\Console\\Application","type":"->"}]} []
[2016-11-13 01:39:56] php.INFO: Twig Test "sameas" is deprecated since version 1.21. Use "same as" instead in JMSTranslationBundle:Translate:messages.html.twig at line 17. {"type":16384,"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Extension/Core.php","line":289,"level":28928,"stack":[{"function":"handleError","class":"Symfony\\Component\\Debug\\ErrorHandler","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Extension/Core.php","line":289,"function":"trigger_error"},{"function":"parseTestExpression","class":"Twig_Extension_Core","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/ExpressionParser.php","line":48,"function":"call_user_func"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/TokenParser/If.php","line":31,"function":"parseExpression","class":"Twig_ExpressionParser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":187,"function":"parse","class":"Twig_TokenParser_If","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/TokenParser/For.php","line":40,"function":"subparse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":187,"function":"parse","class":"Twig_TokenParser_For","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Parser.php","line":100,"function":"subparse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":619,"function":"parse","class":"Twig_Parser","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":671,"function":"parse","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/twig/twig/lib/Twig/Environment.php","line":396,"function":"compileSource","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/CacheWarmer/TemplateCacheCacheWarmer.php","line":78,"function":"loadTemplate","class":"Twig_Environment","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/CacheWarmer/CacheWarmerAggregate.php","line":48,"function":"warmUp","class":"Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheCacheWarmer","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php","line":144,"function":"warmUp","class":"Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Command/CacheClearCommand.php","line":96,"function":"warmup","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Command/Command.php","line":256,"function":"execute","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":810,"function":"run","class":"Symfony\\Component\\Console\\Command\\Command","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":186,"function":"doRunCommand","class":"Symfony\\Component\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Console/Application.php","line":80,"function":"doRun","class":"Symfony\\Component\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/vendor/symfony/symfony/src/Symfony/Component/Console/Application.php","line":117,"function":"doRun","class":"Symfony\\Bundle\\FrameworkBundle\\Console\\Application","type":"->"},{"file":"/Users/lil-works1/Webdisk/www/symfony-master/NoemaParetoManager/bin/console","line":29,"function":"run","class":"Symfony\\Component\\Console\\Application","type":"->"}]} []
