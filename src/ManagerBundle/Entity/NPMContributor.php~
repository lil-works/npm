<?php

namespace ManagerBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * PMContributor
 *
 * @ORM\Table()
 * @ORM\HasLifecycleCallbacks()
 * @ORM\Entity(repositoryClass="ManagerBundle\Entity\NPMContributorRepository")
 */
class NPMContributor
{

    /**
     * @ORM\PreUpdate
     * @ORM\PrePersist
     */
    public function formatLabel() {
        $this->label = strtolower($this->label);
    }

    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;


    /**
     * @var string
     *
     * @ORM\Column(name="label", type="string" , length=50)
     */
    private $label;



    /**
     * @ORM\OneToMany(targetEntity="NPMEventsContributors", mappedBy="contributor", cascade={"persist", "remove" }, orphanRemoval=TRUE)
     */
    private  $events_contributors;


    /**
     * @ORM\OneToMany(targetEntity="NPMSynonym", mappedBy="contributor")
     */
    private $synonyms;


    /**
     * Constructor
     */
    public function __construct()
    {
        $this->events_contributors = new \Doctrine\Common\Collections\ArrayCollection();
    }



    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set label
     *
     * @param string $label
     *
     * @return NPMContributor
     */
    public function setLabel($label)
    {
        $this->label = $label;

        return $this;
    }

    /**
     * Get label
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Add eventsContributor
     *
     * @param \ManagerBundle\Entity\NPMEventsContributors $eventsContributor
     *
     * @return NPMContributor
     */
    public function addEventsContributor(\ManagerBundle\Entity\NPMEventsContributors $eventsContributor)
    {
        $this->events_contributors[] = $eventsContributor;

        return $this;
    }

    /**
     * Remove eventsContributor
     *
     * @param \ManagerBundle\Entity\NPMEventsContributors $eventsContributor
     */
    public function removeEventsContributor(\ManagerBundle\Entity\NPMEventsContributors $eventsContributor)
    {
        $this->events_contributors->removeElement($eventsContributor);
    }

    /**
     * Get eventsContributors
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getEventsContributors()
    {
        return $this->events_contributors;
    }

    /**
     * Add synonym
     *
     * @param \ManagerBundle\Entity\NPMSynonym $synonym
     *
     * @return NPMContributor
     */
    public function addSynonym(\ManagerBundle\Entity\NPMSynonym $synonym)
    {
        $this->synonyms[] = $synonym;

        return $this;
    }

    /**
     * Remove synonym
     *
     * @param \ManagerBundle\Entity\NPMSynonym $synonym
     */
    public function removeSynonym(\ManagerBundle\Entity\NPMSynonym $synonym)
    {
        $this->synonyms->removeElement($synonym);
    }

    /**
     * Get synonyms
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSynonyms()
    {
        return $this->synonyms;
    }
}
