<?php
// MyEntity.php
namespace ManagerBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * @ORM\Entity
 * @UniqueEntity(fields = {"currentInterfero", "screenshot"})
 */
class InterferoScreenShotElement
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string",length=3)
     */
    protected $status;

    /**
     * @ORM\ManyToOne(targetEntity="ManagerBundle\Entity\InterferoScreenShot", inversedBy="elements")
     * @ORM\JoinColumn(name="screenshot", referencedColumnName="id")
     */
    protected $screenshot;

    /**
     * @ORM\ManyToOne(targetEntity="ManagerBundle\Entity\CurrentInterfero", inversedBy="element")
     * @ORM\JoinColumn(name="currentInterfero", referencedColumnName="id")
     */
    protected $currentInterfero;


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set status
     *
     * @param string $status
     *
     * @return InterferoScreenShotElement
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Get status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Set screenshot
     *
     * @param \ManagerBundle\Entity\InterferoScreenShot $screenshot
     *
     * @return InterferoScreenShotElement
     */
    public function setScreenshot(\ManagerBundle\Entity\InterferoScreenShot $screenshot = null)
    {
        $this->screenshot = $screenshot;

        return $this;
    }

    /**
     * Get screenshot
     *
     * @return \ManagerBundle\Entity\InterferoScreenShot
     */
    public function getScreenshot()
    {
        return $this->screenshot;
    }

    /**
     * Set currentInterfero
     *
     * @param \ManagerBundle\Entity\CurrentInterfero $currentInterfero
     *
     * @return InterferoScreenShotElement
     */
    public function setCurrentInterfero(\ManagerBundle\Entity\CurrentInterfero $currentInterfero = null)
    {
        $this->currentInterfero = $currentInterfero;

        return $this;
    }

    /**
     * Get currentInterfero
     *
     * @return \ManagerBundle\Entity\CurrentInterfero
     */
    public function getCurrentInterfero()
    {
        return $this->currentInterfero;
    }
}
