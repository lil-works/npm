<?php

namespace ManagerBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;


/**
 * PMElement
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="ManagerBundle\Entity\PMElementRepository")
 * @ORM\HasLifecycleCallbacks()
 * @UniqueEntity(fields={"label"})
 */
class PMElement
{

    /**
     * @ORM\PreUpdate
     * @ORM\PrePersist
     */
    public function formatLabel() {
        $this->label = strtolower($this->label);
    }

    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;


    /**
     * @var string
     *
     * @ORM\Column(name="label", type="string", length=100,unique=true)
     */
    protected $label;

    /**
     * @ORM\OneToMany(targetEntity="PMSeqsElements", mappedBy="element", cascade={"persist", "remove" }, orphanRemoval=TRUE)
     */
    private  $seqs_elements;


    /**
     * @ORM\OneToMany(targetEntity="PMSynonym", mappedBy="element")
     */
    private $synonyms;



    /**
     * Constructor
     */
    public function __construct()
    {
        $this->seqs_elements = new \Doctrine\Common\Collections\ArrayCollection();
        $this->synonyms = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set label
     *
     * @param string $label
     *
     * @return PMElement
     */
    public function setLabel($label)
    {
        $this->label = $label;

        return $this;
    }

    /**
     * Get label
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Add seqsElement
     *
     * @param \ManagerBundle\Entity\PMSeqsElements $seqsElement
     *
     * @return PMElement
     */
    public function addSeqsElement(\ManagerBundle\Entity\PMSeqsElements $seqsElement)
    {
        $this->seqs_elements[] = $seqsElement;

        return $this;
    }

    /**
     * Remove seqsElement
     *
     * @param \ManagerBundle\Entity\PMSeqsElements $seqsElement
     */
    public function removeSeqsElement(\ManagerBundle\Entity\PMSeqsElements $seqsElement)
    {
        $this->seqs_elements->removeElement($seqsElement);
    }

    /**
     * Get seqsElements
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSeqsElements()
    {
        return $this->seqs_elements;
    }

    /**
     * Add synonym
     *
     * @param \ManagerBundle\Entity\PMSynonym $synonym
     *
     * @return PMElement
     */
    public function addSynonym(\ManagerBundle\Entity\PMSynonym $synonym)
    {
        $this->synonyms[] = $synonym;

        return $this;
    }

    /**
     * Remove synonym
     *
     * @param \ManagerBundle\Entity\PMSynonym $synonym
     */
    public function removeSynonym(\ManagerBundle\Entity\PMSynonym $synonym)
    {
        $this->synonyms->removeElement($synonym);
    }

    /**
     * Get synonyms
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSynonyms()
    {
        return $this->synonyms;
    }

    /**
     * Set mappedOnElement
     *
     * @param string $mappedOnElement
     *
     * @return PMElement
     */
    public function setMappedOnElement($mappedOnElement)
    {
        $this->mappedOnElement = $mappedOnElement;

        return $this;
    }

    /**
     * Get mappedOnElement
     *
     * @return string
     */
    public function getMappedOnElement()
    {
        return $this->mappedOnElement;
    }

    /**
     * Set mappedOnStatus
     *
     * @param string $mappedOnStatus
     *
     * @return PMElement
     */
    public function setMappedOnStatus($mappedOnStatus)
    {
        $this->mappedOnStatus = $mappedOnStatus;

        return $this;
    }

    /**
     * Get mappedOnStatus
     *
     * @return string
     */
    public function getMappedOnStatus()
    {
        return $this->mappedOnStatus;
    }

    /**
     * Set mappedOnActions
     *
     * @param string $mappedOnActions
     *
     * @return PMElement
     */
    public function setMappedOnActions($mappedOnActions)
    {
        $this->mappedOnActions = $mappedOnActions;

        return $this;
    }

    /**
     * Get mappedOnActions
     *
     * @return string
     */
    public function getMappedOnActions()
    {
        return $this->mappedOnActions;
    }

    /**
     * Set mappedOnContributorss
     *
     * @param string $mappedOnContributorss
     *
     * @return PMElement
     */
    public function setMappedOnContributorss($mappedOnContributorss)
    {
        $this->mappedOnContributorss = $mappedOnContributorss;

        return $this;
    }

    /**
     * Get mappedOnContributorss
     *
     * @return string
     */
    public function getMappedOnContributorss()
    {
        return $this->mappedOnContributorss;
    }

   
}
