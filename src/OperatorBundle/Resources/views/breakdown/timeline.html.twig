{% extends "base.html.twig" %}
{% block body %}
    <style>
        .vis-item .vis-item-overflow {
            overflow: visible;
        }

    </style>

    <h1>Breakdown Timeline</h1>
    <div id="visualization">
        <div class="menu">
            <button type="button" class="btn btn-primary" id="moveLeft">Return to past</button>
            <button type="button" class="btn btn-primary" id="moveRight">Return to future</button>
            <button type="button" class="btn btn-primary" id="moveNow">Now</button>
        </div>
    </div>

    <script>

        function getTimelineData() {

            var jsonNodesData = $.ajax({
                url: '{{ path('operator_ajax_breakdown_timeline' )  }}',
                dataType: 'json',
                async:false
            }).done(function (results) {
                output = [];
                results.forEach(function(o) {
                    tmp = {id: o.idField,content: o.valueField,start:  o.startField,end: o.endField};
                    output.push(tmp);
                });



            });
            return output;
        }

        // OM element where the Timeline will be attached
        var container = document.getElementById('visualization');


        var items = new vis.DataSet(getTimelineData());

        var options = {
            start: '{{ start|date("Y-m-d") }}',
            end: '{{ stop|date("Y-m-d") }}',
            editable: true,
            showCurrentTime: true
        };


        /**
         * Move the timeline a given percentage to left or right
         * @param {Number} percentage   For example 0.1 (left) or -0.1 (right)
         */
        function move (percentage) {
            var range = timeline.getWindow();
            var interval = range.end - range.start;

            timeline.setWindow({
                start: range.start.valueOf() - interval * percentage,
                end:   range.end.valueOf()   - interval * percentage
            });
        }
        function now () {

            timeline.setWindow({
                start: '{{ start|date("Y-m-d") }}',
                end: '{{ stop|date("Y-m-d") }}'
            });
        }


        // Create a Timeline
        var timeline = new vis.Timeline(container, items, options);
        function onSelect (properties) {
            if(properties.items > 0){
                var route = "{{ path('operator_breakdown_edit',{id:'myId'}) }}";
                window.location.replace(route.replace("myId",properties.items ));
            }
        }

        // attach events to the navigation buttons
        document.getElementById('moveLeft').onclick  = function () { move( 0.2); };
        document.getElementById('moveRight').onclick = function () { move(-0.2); };
        document.getElementById('moveNow').onclick = function () { now(); };


        timeline.on('select', onSelect);

    </script>
{% endblock %}
